import { supabaseAdmin } from '@/lib/supabase-admin';

/**
 * ุฃุฏุงุฉ ุชุดุฎูุต ูููุทุงูุงุช ุงููุฑุนูุฉ
 */
export const debugSubdomain = async (subdomain: string) => {
  console.log(`๐ง ุชุดุฎูุต ุงููุทุงู ุงููุฑุนู: ${subdomain}`);
  
  try {
    // 1. ูุญุต ูุจุงุดุฑ ุจู select *
    console.log('1๏ธโฃ ูุญุต ูุจุงุดุฑ ุจู select *');
    const { data: allData, error: allError } = await supabaseAdmin
      .from('organizations')
      .select('*')
      .eq('subdomain', subdomain);
    
    console.log('๐ ูุชูุฌุฉ select *:', { data: allData, error: allError });

    // 2. ูุญุต ุจู select ูุญุฏุฏ
    console.log('2๏ธโฃ ูุญุต ุจู select ูุญุฏุฏ');
    const { data: specificData, error: specificError } = await supabaseAdmin
      .from('organizations')
      .select('id, subdomain, name')
      .eq('subdomain', subdomain);
    
    console.log('๐ ูุชูุฌุฉ select ูุญุฏุฏ:', { data: specificData, error: specificError });

    // 3. ูุญุต ุจู maybeSingle
    console.log('3๏ธโฃ ูุญุต ุจู maybeSingle');
    const { data: singleData, error: singleError } = await supabaseAdmin
      .from('organizations')
      .select('id, subdomain, name')
      .eq('subdomain', subdomain)
      .maybeSingle();
    
    console.log('๐ ูุชูุฌุฉ maybeSingle:', { data: singleData, error: singleError });

    // 4. ูุญุต ุนุฏุฏ ุงูุณุฌูุงุช
    console.log('4๏ธโฃ ูุญุต ุนุฏุฏ ุงูุณุฌูุงุช');
    const { count, error: countError } = await supabaseAdmin
      .from('organizations')
      .select('*', { count: 'exact', head: true })
      .eq('subdomain', subdomain);
    
    console.log('๐ ุนุฏุฏ ุงูุณุฌูุงุช:', { count, error: countError });

    // 5. ูุญุต ุงููุทุงูุงุช ุงููุดุงุจูุฉ
    console.log('5๏ธโฃ ูุญุต ุงููุทุงูุงุช ุงููุดุงุจูุฉ');
    const { data: similarData, error: similarError } = await supabaseAdmin
      .from('organizations')
      .select('subdomain')
      .ilike('subdomain', `${subdomain}%`)
      .limit(10);
    
    console.log('๐ ุงููุทุงูุงุช ุงููุดุงุจูุฉ:', { data: similarData, error: similarError });

    // 6. ูุญุต ุฌููุน ุงููุทุงูุงุช
    console.log('6๏ธโฃ ูุญุต ุขุฎุฑ 10 ูุทุงูุงุช');
    const { data: recentData, error: recentError } = await supabaseAdmin
      .from('organizations')
      .select('id, subdomain, name, created_at')
      .order('created_at', { ascending: false })
      .limit(10);
    
    console.log('๐ ุขุฎุฑ 10 ูุทุงูุงุช:', { data: recentData, error: recentError });

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุชุดุฎูุต:', error);
  }
};

/**
 * ุชุดุฎูุต ุดุงูู ููุงุนุฏุฉ ุงูุจูุงูุงุช
 */
export const debugDatabase = async () => {
  console.log('๐ง ุชุดุฎูุต ุดุงูู ููุงุนุฏุฉ ุงูุจูุงูุงุช');
  
  try {
    // ูุญุต ุงุชุตุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช
    const { data, error } = await supabaseAdmin
      .from('organizations')
      .select('count')
      .limit(1);
    
    if (error) {
      console.error('โ ูุดู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช:', error);
    } else {
      console.log('โ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ูุนูู ุจุดูู ุตุญูุญ');
    }

    // ูุญุต ุฅุฌูุงูู ุนุฏุฏ ุงููุคุณุณุงุช
    const { count, error: countError } = await supabaseAdmin
      .from('organizations')
      .select('*', { count: 'exact', head: true });
    
    console.log('๐ ุฅุฌูุงูู ุนุฏุฏ ุงููุคุณุณุงุช:', { count, error: countError });

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุชุดุฎูุต ุงูุดุงูู:', error);
  }
}; 