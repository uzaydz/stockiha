import { ReactNode } from 'react';
import { Navigate, useLocation } from 'react-router-dom';
import { useAuth } from '@/context/AuthContext';

type PublicRouteProps = {
  children: ReactNode;
  redirectTo?: string; // Ø¥Ø¹Ø§Ø¯Ø© Ø§Ù„ØªÙˆØ¬ÙŠÙ‡ Ø¥Ø°Ø§ ÙƒØ§Ù† Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù… Ù…Ø³Ø¬Ù„Ø§Ù‹ Ø§Ù„Ø¯Ø®ÙˆÙ„
};

const PublicRoute = ({ children, redirectTo = '/dashboard' }: PublicRouteProps) => {
  const { user, userProfile, isLoading } = useAuth();
  const location = useLocation();

  // Ø¥Ø°Ø§ ÙƒØ§Ù† Ø§Ù„ØªØ­Ù…ÙŠÙ„ Ø¬Ø§Ø±ÙŠØ§Ù‹ØŒ Ù†Ø¹Ø±Ø¶ Ø§Ù„Ù…Ø­ØªÙˆÙ‰
  if (isLoading) {
    return <>{children}</>;
  }

  // Ø¥Ø°Ø§ ÙƒØ§Ù† Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù… Ù…Ø³Ø¬Ù„ Ø§Ù„Ø¯Ø®ÙˆÙ„ØŒ Ù†Ø¹ÙŠØ¯ ØªÙˆØ¬ÙŠÙ‡Ù‡
  if (user && userProfile) {
    // ØªØ­Ø¯ÙŠØ¯ Ø§Ù„Ù…Ø³Ø§Ø± Ø§Ù„Ù…Ù†Ø§Ø³Ø¨ Ø­Ø³Ø¨ Ø¯ÙˆØ± Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù…
    let targetPath = redirectTo;
    switch (userProfile.role) {
      case 'call_center_agent':
        targetPath = '/call-center/dashboard';
        break;
      case 'admin':
      case 'owner':
        targetPath = '/dashboard';
        break;
      case 'employee':
        targetPath = '/pos';
        break;
      case 'customer':
        targetPath = '/shop';
        break;
      default:
        targetPath = '/dashboard';
    }

    console.log('ðŸ‘¤ PublicRoute: User is authenticated, redirecting to', targetPath);
    return <Navigate to={targetPath} replace />;
  }

  // Ø¥Ø°Ø§ Ù„Ù… ÙŠÙƒÙ† Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù… Ù…Ø³Ø¬Ù„ Ø§Ù„Ø¯Ø®ÙˆÙ„ØŒ Ù†Ø¹Ø±Ø¶ Ø§Ù„Ù…Ø­ØªÙˆÙ‰ Ø§Ù„Ø¹Ø§Ù…
  return <>{children}</>;
};

export default PublicRoute; 