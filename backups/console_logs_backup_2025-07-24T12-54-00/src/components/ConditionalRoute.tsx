import React, { useMemo } from 'react';
import { useAppsData, useIsAppEnabled, useSuperUnifiedData } from '@/context/SuperUnifiedDataContext';
import { Navigate } from 'react-router-dom';

interface ConditionalRouteProps {
  appId: string;
  children: React.ReactNode;
  fallbackPath?: string;
}

/**
 * ูููู ูุญุณู ูุนุฑุถ ุงููุญุชูู ุจุดูู ูุดุฑูุท ุจูุงุกู ุนูู ุญุงูุฉ ุชูุนูู ุงูุชุทุจูู
 * ูุณุชุฎุฏู memoization ูุชุญุณูู ุงูุฃุฏุงุก
 */
const ConditionalRoute: React.FC<ConditionalRouteProps> = ({ 
  appId, 
  children, 
  fallbackPath = '/dashboard' 
}) => {
  const { organizationApps } = useAppsData();
  const { isLoading } = useSuperUnifiedData();
  const isEnabled = useIsAppEnabled(appId);

  // ุฅุถุงูุฉ console.log ููุชุดุฎูุต
  console.log('๐ [ConditionalRoute] ุงูุชุญูู ูู ุงูุชุทุจูู:', {
    appId,
    isEnabled,
    isLoading,
    organizationAppsCount: organizationApps.length,
    organizationApps: organizationApps
  });

  // ุงูุชุธุงุฑ ุชุญููู ุงูุจูุงูุงุช ูุจู ุงุชุฎุงุฐ ูุฑุงุฑ
  if (isLoading || organizationApps.length === 0) {
    // ุนุฑุถ ุดุงุดุฉ ุชุญููู ุจุณูุทุฉ ุฃุซูุงุก ุฌูุจ ุจูุงูุงุช ุงูุชุทุจููุงุช
    return (
      <div className="flex items-center justify-center min-h-[200px]">
        <div className="flex items-center gap-3">
          <div className="animate-spin rounded-full h-6 w-6 border-2 border-primary border-t-transparent"></div>
          <span className="text-sm text-muted-foreground">ุฌุงุฑู ุงูุชุญูู ูู ุงูุชุทุจูู...</span>
        </div>
      </div>
    );
  }

  // ุฅุฐุง ูู ููู ุงูุชุทุจูู ููุนููุ ุฅุนุงุฏุฉ ุชูุฌูู ุฅูู ุงููุณุงุฑ ุงูุงูุชุฑุงุถู
  if (!isEnabled) {
    if (import.meta.env.DEV) {
      console.log(`ุงูุชุทุจูู ${appId} ุบูุฑ ููุนูุ ุฅุนุงุฏุฉ ุชูุฌูู ุฅูู ${fallbackPath}`);
    }
    return <Navigate to={fallbackPath} replace />;
  }

  // ุฅุฐุง ูุงู ุงูุชุทุจูู ููุนููุ ุนุฑุถ ุงููุญุชูู ุงูุนุงุฏู
  return <>{children}</>;
};

export default ConditionalRoute;
