-- =============================================================================
-- ๐ง ุฅุตูุงุญ ุนุฏู ุชุทุงุจู ุฃููุงุน ุงูุจูุงูุงุช ูู ุฏูุงู RPC ููุชุทุจููุงุช
-- =============================================================================

-- ุฅุตูุงุญ ุฏุงูุฉ ุชุนุทูู ุงูุชุทุจูู - ุชุทุงุจู ุฃููุงุน ุงูุจูุงูุงุช ูุน ุงูุฌุฏูู
CREATE OR REPLACE FUNCTION disable_organization_app_secure(
  org_id UUID,
  app_id_param VARCHAR(50)
)
RETURNS TABLE (
  id UUID,
  organization_id UUID,
  app_id VARCHAR(50),
  is_enabled BOOLEAN,
  updated_at TIMESTAMPTZ,
  success BOOLEAN,
  message TEXT
) AS $$
DECLARE
  user_has_permission BOOLEAN := FALSE;
  app_record RECORD;
BEGIN
  -- ูุญุต ุตูุงุญูุงุช ุงููุณุชุฎุฏู
  SELECT EXISTS (
    SELECT 1 FROM users u
    WHERE u.auth_user_id = auth.uid() 
    AND u.organization_id = org_id 
    AND u.role IN ('admin', 'owner')
    AND u.is_active = true
  ) INTO user_has_permission;

  -- ุฅุฐุง ูู ููู ูุฏูู ุตูุงุญูุฉ
  IF NOT user_has_permission THEN
    RETURN QUERY
    SELECT 
      NULL::UUID, 
      NULL::UUID, 
      NULL::VARCHAR(50), 
      NULL::BOOLEAN, 
      NULL::TIMESTAMPTZ,
      FALSE as success,
      'ููุณ ูุฏูู ุตูุงุญูุฉ ูุชุนุทูู ุงูุชุทุจููุงุช ูู ูุฐู ุงููุคุณุณุฉ' as message;
    RETURN;
  END IF;

  -- ุชุนุทูู ุงูุชุทุจูู
  UPDATE organization_apps oa
  SET is_enabled = false, updated_at = NOW()
  WHERE oa.organization_id = org_id AND oa.app_id = app_id_param
  RETURNING * INTO app_record;

  -- ุงูุชุญูู ูู ูุฌูุฏ ุณุฌู
  IF app_record.id IS NULL THEN
    RETURN QUERY
    SELECT 
      NULL::UUID, 
      NULL::UUID, 
      NULL::VARCHAR(50), 
      NULL::BOOLEAN, 
      NULL::TIMESTAMPTZ,
      FALSE as success,
      'ุงูุชุทุจูู ุบูุฑ ููุฌูุฏ ุฃู ุบูุฑ ููุนู ูุณุจูุงู' as message;
    RETURN;
  END IF;

  -- ุฅุฑุฌุงุน ุงููุชูุฌุฉ
  RETURN QUERY
  SELECT 
    app_record.id,
    app_record.organization_id,
    app_record.app_id::VARCHAR(50),
    app_record.is_enabled,
    app_record.updated_at,
    TRUE as success,
    'ุชู ุชุนุทูู ุงูุชุทุจูู ุจูุฌุงุญ' as message;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- ุฅุตูุงุญ ุฏุงูุฉ ุชูุนูู ุงูุชุทุจูู ุฃูุถุงู
CREATE OR REPLACE FUNCTION enable_organization_app_secure(
  org_id UUID,
  app_id_param VARCHAR(50)
)
RETURNS TABLE (
  id UUID,
  organization_id UUID,
  app_id VARCHAR(50),
  is_enabled BOOLEAN,
  created_at TIMESTAMPTZ,
  updated_at TIMESTAMPTZ,
  success BOOLEAN,
  message TEXT
) AS $$
DECLARE
  user_has_permission BOOLEAN := FALSE;
  app_record RECORD;
BEGIN
  -- ูุญุต ุตูุงุญูุงุช ุงููุณุชุฎุฏู
  SELECT EXISTS (
    SELECT 1 FROM users u
    WHERE u.auth_user_id = auth.uid() 
    AND u.organization_id = org_id 
    AND u.role IN ('admin', 'owner')
    AND u.is_active = true
  ) INTO user_has_permission;

  -- ุฅุฐุง ูู ููู ูุฏูู ุตูุงุญูุฉ
  IF NOT user_has_permission THEN
    RETURN QUERY
    SELECT 
      NULL::UUID, 
      NULL::UUID, 
      NULL::VARCHAR(50), 
      NULL::BOOLEAN, 
      NULL::TIMESTAMPTZ, 
      NULL::TIMESTAMPTZ,
      FALSE as success,
      'ููุณ ูุฏูู ุตูุงุญูุฉ ูุชูุนูู ุงูุชุทุจููุงุช ูู ูุฐู ุงููุคุณุณุฉ' as message;
    RETURN;
  END IF;

  -- ุชุญุฏูุซ ุฃู ุฅุฏุฑุงุฌ ุงูุชุทุจูู
  INSERT INTO organization_apps (organization_id, app_id, is_enabled, created_at, updated_at)
  VALUES (org_id, app_id_param, true, NOW(), NOW())
  ON CONFLICT (organization_id, app_id) 
  DO UPDATE SET 
    is_enabled = true, 
    updated_at = NOW()
  RETURNING * INTO app_record;

  -- ุฅุฑุฌุงุน ุงููุชูุฌุฉ
  RETURN QUERY
  SELECT 
    app_record.id,
    app_record.organization_id,
    app_record.app_id::VARCHAR(50),
    app_record.is_enabled,
    app_record.created_at,
    app_record.updated_at,
    TRUE as success,
    'ุชู ุชูุนูู ุงูุชุทุจูู ุจูุฌุงุญ' as message;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- ุฅุนุทุงุก ุงูุตูุงุญูุงุช ุงููุทููุจุฉ
GRANT EXECUTE ON FUNCTION enable_organization_app_secure(UUID, VARCHAR(50)) TO authenticated;
GRANT EXECUTE ON FUNCTION disable_organization_app_secure(UUID, VARCHAR(50)) TO authenticated;

-- ุฅุฒุงูุฉ ุงูุฏูุงู ุงููุฏููุฉ ุจุฃููุงุน ุงูุจูุงูุงุช ุงููุฎุชููุฉ
DROP FUNCTION IF EXISTS enable_organization_app_secure(UUID, TEXT);
DROP FUNCTION IF EXISTS disable_organization_app_secure(UUID, TEXT);

SELECT 'ุชู ุฅุตูุงุญ ุฃููุงุน ุงูุจูุงูุงุช ูู ุฏูุงู RPC ุจูุฌุงุญ' as status; 