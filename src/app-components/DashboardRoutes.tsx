import React, { Suspense } from 'react';
import { Route, Routes, Outlet, Navigate } from 'react-router-dom';
import ProtectedRoute from '../components/auth/ProtectedRoute';
import RequireTenant from '../components/auth/RequireTenant';
import SubscriptionCheck from '../components/subscription/SubscriptionCheck';
import PermissionGuard from '../components/auth/PermissionGuard';
import ConditionalRoute from '../components/ConditionalRoute';
import StaffLoginRedirect from '../components/auth/StaffLoginRedirect';
import * as LazyRoutes from './LazyRoutes.optimized';
import { PageLoader } from './RouteComponents';
import { ConfirmationProvider } from '@/context/ConfirmationContext';

// ูููู wrapper ูู SubscriptionCheck ูุน Outlet
const SubscriptionWrapper = () => (
  <SubscriptionCheck>
    <StaffLoginRedirect>
      <Outlet />
    </StaffLoginRedirect>
  </SubscriptionCheck>
);

// ============ ูุณุงุฑุงุช ููุญุฉ ุงูุชุญูู ุงูููุชููุฉ ============
export const DashboardRoutes = () => (
  <ConfirmationProvider>
  <Routes>
    <Route element={<ProtectedRoute />}>
      <Route element={<RequireTenant />}>
        {/* ๐ฅ SubscriptionCheck ูุงุญุฏ ููุท ูุบุทู ุฌููุน ุงููุณุงุฑุงุช */}
        <Route element={<SubscriptionWrapper />}>
          {/* ููุญุฉ ุงูุชุญูู ุงูููุงุณูููุฉ - ุงูุตูุญุฉ ุงูุฑุฆูุณูุฉ */}
          <Route index element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ููุญุฉ ุงูุชุญูู..." />}>
              <LazyRoutes.Dashboard />
            </Suspense>
          } />
          
          {/* ููุญุฉ ุชุญูู ููุทุฉ ุงูุจูุน - ุงูููุญุฉ ุงูููุงุณูููุฉ ูุน POSPureLayout */}
          <Route path="pos-dashboard" element={
            <ConditionalRoute appId="pos-system">
              <PermissionGuard requiredPermissions={['accessPOS']}>
                <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ููุญุฉ ุชุญูู ููุทุฉ ุงูุจูุน..." />}>
                  <LazyRoutes.Dashboard />
                </Suspense>
              </PermissionGuard>
            </ConditionalRoute>
          } />
          
          {/* ุงูููุชุฌุงุช ูุงููุฎุฒูู */}
          <Route path="products" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงูููุชุฌุงุช..." />}>
              <LazyRoutes.Products />
            </Suspense>
          } />

          {/* ูุฑูุฒ ุงููุจูุนุงุช ูุงูุทูุจุงุช */}
          <Route path="sales-operations/:tab?" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ูุฑูุฒ ุงููุจูุนุงุช ูุงูุทูุจุงุช..." />}>
              <LazyRoutes.SalesOperationsPage />
            </Suspense>
          } />

          {/* ูุฑูุฒ ุงูุฎุฏูุงุช */}
          <Route path="services-operations/:tab?" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ูุฑูุฒ ุงูุฎุฏูุงุช..." />}>
              <LazyRoutes.ServicesOperationsPage />
            </Suspense>
          } />

          {/* ูุฑูุฒ ุงูุชูุงุฑูุฑ ูุงูุชุญูููุงุช */}
          <Route path="reports-operations/:tab?" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ูุฑูุฒ ุงูุชูุงุฑูุฑ..." />}>
              <LazyRoutes.ReportsOperationsPage />
            </Suspense>
          } />

          {/* ุชูุฌูู ุงููุณุงุฑุงุช ุงููุฏููุฉ ุฅูู ุงููุฑูุฒ ุงูุฌุฏูุฏ ูุถูุงู POS layout */}
          <Route path="orders-v2" element={<Navigate to="/dashboard/sales-operations/onlineOrders" replace />} />
          <Route path="blocked-customers" element={<Navigate to="/dashboard/sales-operations/blocked" replace />} />
          <Route path="abandoned-orders" element={<Navigate to="/dashboard/sales-operations/abandoned" replace />} />
          <Route path="invoices" element={<Navigate to="/dashboard/pos-operations/invoices" replace />} />
          
          {/* ุฅุถุงูุฉ ููุชุฌ ุฌุฏูุฏ */}
          <Route path="products/new" element={
            <PermissionGuard requiredPermissions={['addProducts']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ูููุฐุฌ ุงูููุชุฌ..." />}>
                <LazyRoutes.ProductForm useStandaloneLayout={false} />
              </Suspense>
            </PermissionGuard>
          } />

          <Route path="product-operations/:tab?" element={
            <PermissionGuard requiredPermissions={['viewProducts']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ูุฑูุฒ ุฅุฏุงุฑุฉ ุงูููุชุฌุงุช..." />}>
                <LazyRoutes.ProductOperationsPage />
              </Suspense>
            </PermissionGuard>
          } />

          {/* ุชุนุฏูู ููุชุฌ ููุฌูุฏ */}
          <Route path="product/:id" element={
            <PermissionGuard requiredPermissions={['editProducts']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุชุนุฏูู ุงูููุชุฌ..." />}>
                <LazyRoutes.ProductForm useStandaloneLayout={false} />
              </Suspense>
            </PermissionGuard>
          } />
          
          {/* ุชุฎุตูุต ุตูุญุฉ ุดุฑุงุก ุงูููุชุฌ */}
          <Route path="products/:productId/customize-purchase-page" element={
            <PermissionGuard requiredPermissions={['editProducts']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุชุฎุตูุต ุตูุญุฉ ุงูุดุฑุงุก..." />}>
                <LazyRoutes.CustomizeProductPurchasePage />
              </Suspense>
            </PermissionGuard>
          } />
          
          <Route path="inventory" element={
            <PermissionGuard requiredPermissions={['viewInventory']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงููุฎุฒูู..." />}>
                <LazyRoutes.Inventory />
              </Suspense>
            </PermissionGuard>
          } />
          
          {/* ุชุชุจุน ุงููุฎุฒูู ุงููุชูุฏู */}
          <Route path="inventory-tracking" element={
            <PermissionGuard requiredPermissions={['viewInventory']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุชุชุจุน ุงููุฎุฒูู ุงููุชูุฏู..." />}>
                <LazyRoutes.AdvancedInventoryTracking />
              </Suspense>
            </PermissionGuard>
          } />
          
          {/* ุงูุทุจุงุนุฉ ุงูุณุฑูุนุฉ ููุจุงุฑููุฏ */}
          <Route path="quick-barcode-print" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงูุทุจุงุนุฉ ุงูุณุฑูุนุฉ..." />}>
              <LazyRoutes.QuickBarcodePrintPage />
            </Suspense>
          } />
          
          <Route path="categories" element={
            <PermissionGuard requiredPermissions={['manageProductCategories']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงููุฆุงุช..." />}>
                <LazyRoutes.Categories />
              </Suspense>
            </PermissionGuard>
          } />
          
          {/* ุฎุฏูุงุช ุงูุฅุตูุงุญ โ ุชูุฌูู ููุฑูุฒ ุงูุฎุฏูุงุช */}
          <Route path="repair-services" element={<Navigate to="/dashboard/services-operations/repair" replace />} />
          
          
          <Route path="orders" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงูุทูุจุงุช..." />}>
              <LazyRoutes.Orders />
            </Suspense>
          } />
          
          {/* ุงููุณุฎุฉ ุงููุญุณูุฉ V2 ุจุงุณุชุฏุนุงุก ูุงุญุฏ */}
          <Route path="orders-v2" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงูุทูุจุงุช (V2)..." />}>
              <LazyRoutes.OrdersV2 />
            </Suspense>
          } />
          {/* ุชูุงุตูู ุงูุทูุจ (V2) ุจุฑูู ุงูุทูุจูุฉ */}
          <Route path="orders-v2/:orderNumber" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุชูุงุตูู ุงูุทูุจ..." />}>
              <LazyRoutes.OrderDetailsV2 />
            </Suspense>
          } />
          
          {/* ุงูุทูุจูุงุช ุงููุชูุฏูุฉ */}
          <Route path="advanced-orders" element={
            <PermissionGuard requiredPermissions={['viewOrders']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงูุทูุจูุงุช ุงููุชูุฏูุฉ..." />}>
                <LazyRoutes.AdvancedOrders />
              </Suspense>
            </PermissionGuard>
          } />
          
          <Route path="abandoned-orders" element={
            <PermissionGuard requiredPermissions={['viewOrders']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงูุทูุจุงุช ุงูููุฌูุฑุฉ..." />}>
                <LazyRoutes.AbandonedOrders />
              </Suspense>
            </PermissionGuard>
          } />

          {/* ูุงุฆูุฉ ุงููุญุธูุฑูู */}
          <Route path="blocked-customers" element={
            <PermissionGuard requiredPermissions={['viewOrders']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ูุงุฆูุฉ ุงููุญุธูุฑูู..." />}>
                <LazyRoutes.BlockedCustomers />
              </Suspense>
            </PermissionGuard>
          } />
          
          {/* ุงูุนููุงุก ูุงูุฏููู */}
          <Route path="customers" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงูุนููุงุก..." />}>
              <LazyRoutes.Customers />
            </Suspense>
          } />
          
          <Route path="customer-debts" element={<Navigate to="/dashboard/pos-operations/debts" replace />} />
          
          <Route path="customer-debt-details/:customerId" element={
            <ConditionalRoute appId="pos-system">
              <PermissionGuard requiredPermissions={['viewDebts']}>
                <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุชูุงุตูู ุงูุฏููู..." />}>
                  <LazyRoutes.CustomerDebtDetails />
                </Suspense>
              </PermissionGuard>
            </ConditionalRoute>
          } />
          
          <Route path="payment-history" element={
            <PermissionGuard requiredPermissions={['viewFinancialReports']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุชุงุฑูุฎ ุงููุฏููุนุงุช..." />}>
                <LazyRoutes.PaymentHistory />
              </Suspense>
            </PermissionGuard>
          } />
          
          {/* ุงูููุธููู */}
          <Route path="employees" element={
            <PermissionGuard requiredPermissions={['viewEmployees']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงูููุธููู..." />}>
                <LazyRoutes.Employees />
              </Suspense>
            </PermissionGuard>
          } />
          
          <Route path="order-distribution" element={
            <PermissionGuard requiredPermissions={['manageEmployees']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุชูุฒูุน ุงูุทูุจุงุช..." />}>
                <LazyRoutes.OrderDistributionSettings />
              </Suspense>
            </PermissionGuard>
          } />

          <Route path="confirmation-center" element={
            <PermissionGuard requiredPermissions={['manageEmployees']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ูุฑูุฒ ุงูุชุฃููุฏ..." />}>
                <LazyRoutes.ConfirmationCenter />
              </Suspense>
            </PermissionGuard>
          } />
          
          {/* ุงููุงููุฉ ูุงูุชูุงุฑูุฑ */}
          <Route path="expenses" element={
            <PermissionGuard requiredPermissions={['viewFinancialReports']}>
              <Navigate to="/dashboard/reports-operations/expenses" replace />
            </PermissionGuard>
          } />
          
          <Route path="analytics" element={
            <PermissionGuard requiredPermissions={['viewSalesReports']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงูุชุญูููุงุช..." />}>
                <LazyRoutes.Analytics />
              </Suspense>
            </PermissionGuard>
          } />

          {/* ุงูุชุญูููุงุช ุงููุงููุฉ ุงูุดุงููุฉ โ ุงููุฑูุฒ */}
          <Route path="financial-analytics" element={<Navigate to="/dashboard/reports-operations/financial" replace />} />

          {/* ูุธุงู ุงูุฒูุงุฉ โ ุงููุฑูุฒ */}
          <Route path="zakat" element={<Navigate to="/dashboard/reports-operations/zakat" replace />} />
          
          {/* ููุทุฉ ุงูุจูุน */}
          <Route path="pos" element={
            <ConditionalRoute appId="pos-system">
              <PermissionGuard requiredPermissions={['accessPOS']}>
                <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ููุทุฉ ุงูุจูุน..." />}>
                  <LazyRoutes.POSOptimized />
                </Suspense>
              </PermissionGuard>
            </ConditionalRoute>
          } />
          
          {/* ููุญุฉ ุชุญูู ููุทุฉ ุงูุจูุน - ุชู ููููุง ุฅูู /dashboard ูู RouteComponents */}
          
          {/* ููุทุฉ ุงูุจูุน ุงููุชูุฏูุฉ */}
          <Route path="pos-advanced" element={
            <ConditionalRoute appId="pos-system">
              <PermissionGuard requiredPermissions={['accessPOS']}>
                <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ููุทุฉ ุงูุจูุน ุงููุชูุฏูุฉ..." />}>
                  <LazyRoutes.POSAdvanced />
                </Suspense>
              </PermissionGuard>
            </ConditionalRoute>
          } />

          <Route path="pos-operations/:tab?" element={
            <ConditionalRoute appId="pos-system">
              <PermissionGuard requiredPermissions={['accessPOS']}>
                <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ูุฑูุฒ ุนูููุงุช ููุทุฉ ุงูุจูุน..." />}>
                  <LazyRoutes.POSOperationsPage />
                </Suspense>
              </PermissionGuard>
            </ConditionalRoute>
          } />
          
          <Route path="pos-orders" element={<Navigate to="/dashboard/pos-operations/orders" replace />} />
          
          {/* ูุดู ุญุณุงุจ 104 */}
          <Route path="etat104" element={
            <ConditionalRoute appId="pos-system">
              <PermissionGuard requiredPermissions={['accessPOS']}>
                <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ูุดู ุญุณุงุจ 104..." />}>
                  <LazyRoutes.Etat104 />
                </Suspense>
              </PermissionGuard>
            </ConditionalRoute>
          } />
          
          {/* ุฅุนุฏุงุฏุงุช ููุทุฉ ุงูุจูุน */}
          <Route path="pos-settings" element={
            <ConditionalRoute appId="pos-system">
              <PermissionGuard requiredPermissions={['manageOrganizationSettings']}>
                <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุฅุนุฏุงุฏุงุช ููุทุฉ ุงูุจูุน..." />}>
                  <LazyRoutes.POSSettingsPage />
                </Suspense>
              </PermissionGuard>
            </ConditionalRoute>
          } />
          
          {/* ุฅุนุฏุงุฏุงุช ุงููุญู */}
          <Route path="store-business-settings" element={
            <ConditionalRoute appId="pos-system">
              <PermissionGuard requiredPermissions={['manageOrganizationSettings']}>
                <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุฅุนุฏุงุฏุงุช ุงููุญู..." />}>
                  <LazyRoutes.StoreBusinessSettings />
                </Suspense>
              </PermissionGuard>
            </ConditionalRoute>
          } />
          
          {/* ุฅุฏุงุฑุฉ ุงูููุธููู ูุงูุฌูุณุงุช */}
          <Route path="staff-management" element={
            <ConditionalRoute appId="pos-system">
              <PermissionGuard requiredPermissions={['manageEmployees']}>
                <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุฅุฏุงุฑุฉ ุงูููุธููู..." />}>
                  <LazyRoutes.StaffManagement />
                </Suspense>
              </PermissionGuard>
            </ConditionalRoute>
          } />
          
          <Route path="returns" element={<Navigate to="/dashboard/pos-operations/returns" replace />} />
          
          <Route path="losses" element={<Navigate to="/dashboard/pos-operations/losses" replace />} />
          
          {/* ูุฑูุฒ ุฅุฏุงุฑุฉ ุงูููุธููู */}
          <Route path="staff-operations/:tab?" element={
            <ConditionalRoute appId="pos-system">
              <PermissionGuard requiredPermissions={['manageEmployees']}>
                <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ูุฑูุฒ ุฅุฏุงุฑุฉ ุงูููุธููู..." />}>
                  <LazyRoutes.StaffOperationsPage />
                </Suspense>
              </PermissionGuard>
            </ConditionalRoute>
          } />
          
          {/* ูุฑูุฒ ุฅุฏุงุฑุฉ ุงูููุฑุฏูู ูุงููุดุชุฑูุงุช */}
          <Route path="supplier-operations/:tab?" element={
            <PermissionGuard requiredPermissions={['viewSuppliers']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ูุฑูุฒ ุฅุฏุงุฑุฉ ุงูููุฑุฏูู..." />}>
                <LazyRoutes.SupplierOperationsPage />
              </Suspense>
            </PermissionGuard>
          } />

          {/* ุชูุฌูู ุงููุณุงุฑุงุช ุงููุฏููุฉ ุฅูู ุงููุฑูุฒ ุงูุฌุฏูุฏ */}
          <Route path="suppliers" element={<Navigate to="/dashboard/supplier-operations/suppliers" replace />} />
          <Route path="suppliers/new" element={<Navigate to="/dashboard/supplier-operations/suppliers" replace />} />
          <Route path="suppliers/purchases" element={<Navigate to="/dashboard/supplier-operations/purchases" replace />} />
          <Route path="suppliers/purchases/new" element={<Navigate to="/dashboard/supplier-operations/purchases" replace />} />
          <Route path="suppliers/purchases/:purchaseId" element={<Navigate to="/dashboard/supplier-operations/purchases" replace />} />
          <Route path="suppliers/purchases/:purchaseId/edit" element={<Navigate to="/dashboard/supplier-operations/purchases" replace />} />
          <Route path="suppliers/payments" element={<Navigate to="/dashboard/supplier-operations/payments" replace />} />
          <Route path="suppliers/payments/new" element={<Navigate to="/dashboard/supplier-operations/payments" replace />} />
          <Route path="suppliers/payments/:paymentId" element={<Navigate to="/dashboard/supplier-operations/payments" replace />} />
          <Route path="suppliers/reports" element={<Navigate to="/dashboard/supplier-operations/reports" replace />} />
          
          {/* ุชุญููู ุงูุฃูุนุงุจ */}
          <Route path="game-downloads" element={
            <ConditionalRoute appId="game-downloads">
              <PermissionGuard requiredPermissions={['manageOrganizationSettings']}>
                <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุฅุฏุงุฑุฉ ุงูุฃูุนุงุจ..." />}>
                  <LazyRoutes.GameDownloadsPage />
                </Suspense>
              </PermissionGuard>
            </ConditionalRoute>
          } />
          
          {/* ูุฑูุฒ ุงูุฅุนุฏุงุฏุงุช ุงูุนุงูุฉ */}
          <Route path="settings-operations/:tab?" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ูุฑูุฒ ุงูุฅุนุฏุงุฏุงุช..." />}>
              <LazyRoutes.SettingsOperationsPage />
            </Suspense>
          } />

          {/* ุชูุฌูู ุงููุณุงุฑุงุช ุงููุฏููุฉ ุฅูู ุงููุฑูุฒ ุงูุฌุฏูุฏ */}
          <Route path="settings" element={<Navigate to="/dashboard/settings-operations/settings" replace />} />
          <Route path="settings/:section" element={<Navigate to="/dashboard/settings-operations/settings" replace />} />
          <Route path="subscription" element={<Navigate to="/dashboard/settings-operations/subscription" replace />} />
          <Route path="custom-domains" element={<Navigate to="/dashboard/settings-operations/custom-domains" replace />} />
          <Route path="/docs/custom-domains" element={<Navigate to="/dashboard/settings-operations/domains-docs" replace />} />
          
          {/* ูุฑูุฒ ุฅุฏุงุฑุฉ ุงููุชุฌุฑ ุงูุฅููุชุฑููู */}
          <Route path="store-operations/:tab?" element={
            <PermissionGuard requiredPermissions={['manageOrganizationSettings']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ูุฑูุฒ ุฅุฏุงุฑุฉ ุงููุชุฌุฑ..." />}>
                <LazyRoutes.StoreOperationsPage />
              </Suspense>
            </PermissionGuard>
          } />

          {/* ุชูุฌูู ุงููุณุงุฑุงุช ุงููุฏููุฉ ุฅูู ุงููุฑูุฒ ุงูุฌุฏูุฏ */}
          <Route path="store-settings" element={<Navigate to="/dashboard/store-operations/store-settings" replace />} />
          <Route path="store-editor" element={<Navigate to="/dashboard/store-operations/store-editor" replace />} />
          <Route path="organization-components-editor" element={<Navigate to="/dashboard/store-operations/components" replace />} />
          <Route path="store-themes" element={<Navigate to="/dashboard/store-operations/themes" replace />} />
          <Route path="landing-pages" element={<Navigate to="/dashboard/store-operations/landing-pages" replace />} />
          <Route path="thank-you-editor" element={<Navigate to="/dashboard/store-operations/thank-you" replace />} />
          <Route path="delivery" element={<Navigate to="/dashboard/store-operations/delivery" replace />} />
          
          {/* ูุญุฑุฑ ุงููุชุฌุฑ V2 - keep as standalone */}
          <Route path="store-editor-v2" element={
            <PermissionGuard requiredPermissions={['manageOrganizationSettings']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ูุญุฑุฑ ุงููุชุฌุฑ V2..." />}>
                <LazyRoutes.StoreEditorV2 />
              </Suspense>
            </PermissionGuard>
          } />

          {/* ุฅุนุงุฏุฉ ุชูุฌูู ููุงุฌูุฉ ุงููุชุฌุฑ */}
          <Route path="open-store" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ูุชุญ ูุงุฌูุฉ ุงููุชุฌุฑ..." />}>
              <LazyRoutes.OpenStoreRedirect />
            </Suspense>
          } />
          
          
          {/* ุฎุฏูุงุช ุงูุงุดุชุฑุงู โ ุชูุฌูู ููุฑูุฒ ุงูุฎุฏูุงุช */}
          <Route path="subscription-services" element={<Navigate to="/dashboard/services-operations/subscription" replace />} />
          
          <Route path="apps" element={
            <PermissionGuard requiredPermissions={['manageOrganizationSettings']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงูุชุทุจููุงุช..." />}>
                <LazyRoutes.AppsManagement />
              </Suspense>
            </PermissionGuard>
          } />
          
          {/* ููุดุฆ ุตูุญุฉ ุงููุจูุท - keep as standalone */}
          <Route path="/landing-page-builder/:id" element={
            <PermissionGuard requiredPermissions={['manageOrganizationSettings']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ููุดุฆ ุตูุญุฉ ุงููุจูุท..." />}>
                <LazyRoutes.LandingPageBuilder />
              </Suspense>
            </PermissionGuard>
          } />
          
          <Route path="form-settings" element={
            <PermissionGuard requiredPermissions={['manageOrganizationSettings']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุฅุนุฏุงุฏุงุช ุงูููุงุฐุฌ..." />}>
                <LazyRoutes.FormSettings />
              </Suspense>
            </PermissionGuard>
          } />
          
          <Route path="/form-builder/:formId" element={
            <PermissionGuard requiredPermissions={['manageOrganizationSettings']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ููุดุฆ ุงูููุงุฐุฌ..." />}>
                <LazyRoutes.FormBuilder />
              </Suspense>
            </PermissionGuard>
          } />
          
          <Route path="custom-pages" element={
            <PermissionGuard requiredPermissions={['manageOrganizationSettings']}>
              <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงูุตูุญุงุช ุงููุฎุตุตุฉ..." />}>
                <LazyRoutes.CustomPagesManager />
              </Suspense>
            </PermissionGuard>
          } />

          {/* ูุณุงุฑุงุช ูุฑูุฒ ุงูุงุชุตุงูุงุช */}
          <Route path="call-center" element={
            <ConditionalRoute appId="call-center">
              <PermissionGuard requiredPermissions={['manageOrganizationSettings']}>
                <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ูุฑูุฒ ุงูุงุชุตุงูุงุช..." />}>
                  <LazyRoutes.CallCenterComingSoon />
                </Suspense>
              </PermissionGuard>
            </ConditionalRoute>
          } />
          
          <Route path="call-center/agents" element={
            <ConditionalRoute appId="call-center">
              <PermissionGuard requiredPermissions={['manageOrganizationSettings']}>
                <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุฅุฏุงุฑุฉ ุงููููุงุก..." />}>
                  <LazyRoutes.CallCenterComingSoon />
                </Suspense>
              </PermissionGuard>
            </ConditionalRoute>
          } />
          
          <Route path="call-center/distribution" element={
            <ConditionalRoute appId="call-center">
              <PermissionGuard requiredPermissions={['manageOrganizationSettings']}>
                <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุฅุนุฏุงุฏุงุช ุงูุชูุฒูุน..." />}>
                  <LazyRoutes.CallCenterComingSoon />
                </Suspense>
              </PermissionGuard>
            </ConditionalRoute>
          } />
          
          <Route path="call-center/reports" element={
            <ConditionalRoute appId="call-center">
              <PermissionGuard requiredPermissions={['manageOrganizationSettings']}>
                <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงูุชูุงุฑูุฑ..." />}>
                  <LazyRoutes.CallCenterComingSoon />
                </Suspense>
              </PermissionGuard>
            </ConditionalRoute>
          } />
          
          <Route path="call-center/monitoring" element={
            <ConditionalRoute appId="call-center">
              <PermissionGuard requiredPermissions={['manageOrganizationSettings']}>
                <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงููุฑุงูุจุฉ ุงููุจุงุดุฑุฉ..." />}>
                  <LazyRoutes.CallCenterComingSoon />
                </Suspense>
              </PermissionGuard>
            </ConditionalRoute>
          } />

          {/* ูุฑูุฒ ุฏูุฑุงุช ุณุชููููุง */}
          <Route path="courses-operations/:tab?" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ูุฑูุฒ ุงูุฏูุฑุงุช..." />}>
              <LazyRoutes.CoursesOperationsPage />
            </Suspense>
          } />

          {/* ุชูุฌูู ุงููุณุงุฑุงุช ุงููุฏููุฉ ุฅูู ุงููุฑูุฒ ุงูุฌุฏูุฏ */}
          <Route path="courses" element={<Navigate to="/dashboard/courses-operations/all" replace />} />
          <Route path="courses/digital-marketing" element={<Navigate to="/dashboard/courses-operations/digital-marketing" replace />} />
          <Route path="courses/e-commerce" element={<Navigate to="/dashboard/courses-operations/e-commerce" replace />} />

          {/* ุงููุญูุฑ ุงูุฃูู - ุฃุณุงุณูุงุช ุงูุชุฌุงุฑุฉ ุงูุฅููุชุฑูููุฉ */}
          <Route path="courses/e-commerce/module/1" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุฃุณุงุณูุงุช ุงูุชุฌุงุฑุฉ ุงูุฅููุชุฑูููุฉ..." />}>
              <LazyRoutes.ECommerceModule1 />
            </Suspense>
          } />

          {/* ุงููุญูุฑ ุงูุซุงูู - ุงุณุชุฑุงุชูุฌูุงุช ูุฃุฏูุงุช ุงูุชุฌุงุฑุฉ ุงูุฅููุชุฑูููุฉ */}
          <Route path="courses/e-commerce/module/2" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงุณุชุฑุงุชูุฌูุงุช ุงูุชุฌุงุฑุฉ ุงูุฅููุชุฑูููุฉ..." />}>
              <LazyRoutes.ECommerceModule2 />
            </Suspense>
          } />

          <Route path="courses/e-commerce-store" element={<Navigate to="/dashboard/courses-operations/e-commerce-store" replace />} />
          <Route path="courses/tiktok-marketing" element={<Navigate to="/dashboard/courses-operations/tiktok-marketing" replace />} />
          <Route path="courses/traditional-business" element={<Navigate to="/dashboard/courses-operations/traditional-business" replace />} />
          <Route path="courses/service-providers" element={<Navigate to="/dashboard/courses-operations/service-providers" replace />} />

          {/* ุฌููุน ูุญุงูุฑ ุฏูุฑุฉ ุงูุชุณููู ุงูุฅููุชุฑููู */}
          <Route path="courses/digital-marketing/module/1" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงููุญูุฑ ุงูุฃูู..." />}>
              <LazyRoutes.DigitalMarketingModule1 />
            </Suspense>
          } />

          <Route path="courses/digital-marketing/module/2" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงููุญูุฑ ุงูุซุงูู..." />}>
              <LazyRoutes.DigitalMarketingModule2 />
            </Suspense>
          } />

          <Route path="courses/digital-marketing/module/3" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงููุญูุฑ ุงูุซุงูุซ..." />}>
              <LazyRoutes.DigitalMarketingModule3 />
            </Suspense>
          } />

          <Route path="courses/digital-marketing/module/4" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงููุญูุฑ ุงูุฑุงุจุน..." />}>
              <LazyRoutes.DigitalMarketingModule4 />
            </Suspense>
          } />

          <Route path="courses/digital-marketing/module/5" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงููุญูุฑ ุงูุฎุงูุณ..." />}>
              <LazyRoutes.DigitalMarketingModule5 />
            </Suspense>
          } />

          <Route path="courses/digital-marketing/module/6" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงููุญูุฑ ุงูุณุงุฏุณ..." />}>
              <LazyRoutes.DigitalMarketingModule6 />
            </Suspense>
          } />

          <Route path="courses/digital-marketing/module/7" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงููุญูุฑ ุงูุณุงุจุน..." />}>
              <LazyRoutes.DigitalMarketingModule7 />
            </Suspense>
          } />

          <Route path="courses/digital-marketing/module/8" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงููุญูุฑ ุงูุซุงูู..." />}>
              <LazyRoutes.DigitalMarketingModule8 />
            </Suspense>
          } />

          <Route path="courses/digital-marketing/module/9" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงููุญูุฑ ุงูุชุงุณุน..." />}>
              <LazyRoutes.DigitalMarketingModule9 />
            </Suspense>
          } />

          <Route path="courses/digital-marketing/module/10" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงููุญูุฑ ุงูุนุงุดุฑ..." />}>
              <LazyRoutes.DigitalMarketingModule10 />
            </Suspense>
          } />

          <Route path="courses/digital-marketing/module/11" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงููุญูุฑ ุงูุญุงุฏู ุนุดุฑ..." />}>
              <LazyRoutes.DigitalMarketingModule11 />
            </Suspense>
          } />

          <Route path="courses/digital-marketing/module/12" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงููุญูุฑ ุงูุซุงูู ุนุดุฑ..." />}>
              <LazyRoutes.DigitalMarketingModule12 />
            </Suspense>
          } />

          {/* ุฌููุน ูุญุงูุฑ ุฏูุฑุฉ ุชูู ุชูู ุฃุฏุณ */}
          <Route path="courses/tiktok-marketing/module/0" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุณูุงุณุฉ ุชูู ุชูู..." />}>
              <LazyRoutes.TikTokAdsModule0 />
            </Suspense>
          } />

          <Route path="courses/tiktok-marketing/module/1" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงูููุฏูุฉ..." />}>
              <LazyRoutes.TikTokAdsModule1 />
            </Suspense>
          } />

          <Route path="courses/tiktok-marketing/module/2" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงูุญุณุงุจุงุช ุงูุฅุนูุงููุฉ..." />}>
              <LazyRoutes.TikTokAdsModule2 />
            </Suspense>
          } />

          <Route path="courses/tiktok-marketing/module/3" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุฃุณุงุณูุงุช ูุฏูุฑ ุงูุฅุนูุงูุงุช..." />}>
              <LazyRoutes.TikTokAdsModule3 />
            </Suspense>
          } />

          <Route path="courses/tiktok-marketing/module/4" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุฃูุฏุงู ุงูุญููุฉ..." />}>
              <LazyRoutes.TikTokAdsModule4 />
            </Suspense>
          } />

          <Route path="courses/tiktok-marketing/module/5" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุฅุนุฏุงุฏ ุงููุฌููุนุฉ ุงูุฅุนูุงููุฉ..." />}>
              <LazyRoutes.TikTokAdsModule5 />
            </Suspense>
          } />

          <Route path="courses/tiktok-marketing/module/6" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุชุตููู ุงูุฅุนูุงู..." />}>
              <LazyRoutes.TikTokAdsModule6 />
            </Suspense>
          } />

          <Route path="courses/tiktok-marketing/module/7" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงูุฅุถุงูุงุช ุงููููุฉ..." />}>
              <LazyRoutes.TikTokAdsModule7 />
            </Suspense>
          } />

          <Route path="courses/tiktok-marketing/module/8" element={
            <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงูุจูุณู ูุงูุฌูุงููุฑ ุงููุฎุตุตุฉ..." />}>
              <LazyRoutes.TikTokAdsModule8 />
            </Suspense>
          } />

        </Route>
        
        {/* ุตูุญุฉ ุงูุงุดุชุฑุงู - ุฎุงุฑุฌ SubscriptionCheck ูุชุฌูุจ ุงูููุจ */}
        <Route path="subscription" element={
          <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุงูุงุดุชุฑุงู..." />}>
            <LazyRoutes.SubscriptionPage />
          </Suspense>
        } />

        {/* ุตูุญุฉ ุฅุนุงุฏุฉ ุดุญู ุงูุทูุจูุงุช ุงูุฅููุชุฑูููุฉ */}
        <Route path="online-orders-recharge" element={
          <Suspense fallback={<PageLoader message="ุฌุงุฑู ุชุญููู ุฅุนุงุฏุฉ ุดุญู ุงูุทูุจูุงุช..." />}>
            <LazyRoutes.OnlineOrdersRechargePage />
          </Suspense>
        } />

      </Route>
    </Route>
  </Routes>
  </ConfirmationProvider>
);

export default DashboardRoutes;
