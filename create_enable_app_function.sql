-- =============================================================================
-- ๐ง ุฅูุดุงุก ุฏุงูุฉ ุชูุนูู ุงูุชุทุจูู
-- =============================================================================

-- ุญุฐู ุงูุฏุงูุฉ ุงููุฏููุฉ ุฅุฐุง ูุงูุช ููุฌูุฏุฉ
DROP FUNCTION IF EXISTS enable_organization_app_simple(UUID, VARCHAR(50));

-- ุฅูุดุงุก ุฏุงูุฉ ุฌุฏูุฏุฉ ูุชูุนูู ุงูุชุทุจูู
CREATE OR REPLACE FUNCTION enable_organization_app_simple(
  org_id UUID,
  app_id_param VARCHAR(50)
)
RETURNS BOOLEAN
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
DECLARE
  user_role TEXT;
BEGIN
  -- ุงูุชุญูู ูู ุตูุงุญูุฉ ุงููุณุชุฎุฏู
  SELECT u.role INTO user_role
  FROM users u
  WHERE u.auth_user_id = auth.uid()
  AND u.organization_id = org_id
  AND u.is_active = true;
  
  IF user_role IS NULL THEN
    RAISE EXCEPTION 'ุบูุฑ ูุตุฑุญ ูู ุจุงููุตูู ููุฐู ุงููุคุณุณุฉ';
  END IF;
  
  IF user_role NOT IN ('admin', 'owner') THEN
    RAISE EXCEPTION 'ุตูุงุญูุงุช ุบูุฑ ูุงููุฉ ูุชูุนูู ุงูุชุทุจููุงุช';
  END IF;
  
  -- ุชูุนูู ุงูุชุทุจูู ุฃู ุฅูุดุงุคู
  INSERT INTO organization_apps (organization_id, app_id, is_enabled, installed_at, configuration, created_at, updated_at)
  VALUES (org_id, app_id_param, true, NOW(), '{}'::jsonb, NOW(), NOW())
  ON CONFLICT (organization_id, app_id) 
  DO UPDATE SET 
    is_enabled = true,
    updated_at = NOW();
    
  RETURN true;
END;
$$;

-- ุฅุนุทุงุก ุงูุตูุงุญูุงุช ุงููุทููุจุฉ
GRANT EXECUTE ON FUNCTION enable_organization_app_simple(UUID, VARCHAR(50)) TO authenticated;

-- ุชุณุฌูู ุงููุฌุงุญ
DO $$
BEGIN
  RAISE NOTICE 'ุชู ุฅูุดุงุก ุฏุงูุฉ ุชูุนูู ุงูุชุทุจูู ุจูุฌุงุญ';
END $$; 