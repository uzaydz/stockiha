import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { z } from 'zod';
import { zodResolver } from '@hookform/resolvers/zod';
import { useForm } from 'react-hook-form';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';
import { toast } from 'sonner';
import { registerTenant } from '@/lib/api/tenant';

// ูุฎุทุท ุงูุชุญูู ูู ุตุญุฉ ุงููููุฐุฌ
const formSchema = z.object({
  name: z.string().min(3, { message: 'ูุฌุจ ุฃู ูููู ุงูุงุณู 3 ุฃุญุฑู ุนูู ุงูุฃูู' }),
  email: z.string().email({ message: 'ูุฑุฌู ุฅุฏุฎุงู ุจุฑูุฏ ุฅููุชุฑููู ุตุญูุญ' }),
  phone: z.string().optional(),
  password: z.string().min(6, { message: 'ูุฌุจ ุฃู ุชููู ูููุฉ ุงููุฑูุฑ 6 ุฃุญุฑู ุนูู ุงูุฃูู' }),
  confirmPassword: z.string(),
  organizationName: z.string().min(3, { message: 'ูุฌุจ ุฃู ูููู ุงุณู ุงููุคุณุณุฉ 3 ุฃุญุฑู ุนูู ุงูุฃูู' }),
  subdomain: z.string()
    .min(3, { message: 'ูุฌุจ ุฃู ูููู ุงููุทุงู ุงููุฑุนู 3 ุฃุญุฑู ุนูู ุงูุฃูู' })
    .regex(/^[a-z0-9]+(-[a-z0-9]+)*$/, { 
      message: 'ุงููุทุงู ุงููุฑุนู ูุฌุจ ุฃู ูุญุชูู ุนูู ุฃุญุฑู ุตุบูุฑุฉ ูุฃุฑูุงู ูุดุฑุทุงุช ููุท' 
    }),
}).refine((data) => data.password === data.confirmPassword, {
  message: "ูููุงุช ุงููุฑูุฑ ุบูุฑ ูุชุทุงุจูุฉ",
  path: ["confirmPassword"],
});

type FormValues = z.infer<typeof formSchema>;

const TenantRegistrationForm = () => {
  const navigate = useNavigate();
  const [isLoading, setIsLoading] = useState(false);

  // ุฅุนุฏุงุฏ ูููุฐุฌ React Hook Form ูุน Zod
  const form = useForm<FormValues>({
    resolver: zodResolver(formSchema),
    defaultValues: {
      name: '',
      email: '',
      phone: '',
      password: '',
      confirmPassword: '',
      organizationName: '',
      subdomain: '',
    },
  });

  // ูุนุงูุฌุฉ ุฅุฑุณุงู ุงููููุฐุฌ
  const onSubmit = async (values: FormValues) => {
    setIsLoading(true);
    try {
      const { success, error } = await registerTenant({
        name: values.name,
        email: values.email,
        phone: values.phone,
        password: values.password,
        organizationName: values.organizationName,
        subdomain: values.subdomain,
      });
      
      if (success) {
        toast.success('๐ ุชู ุฅูุดุงุก ุญุณุงุจ ุงููุณุคูู ุจูุฌุงุญ! ูุฑุญุจุงู ุจู ูู ุณุชููููุง');
        // ๐ ุงูุชูุฌูู ุงููุญุณู: /dashboard ูุจุงุดุฑุฉ ุจุฏูู ูุทุงู ูุฑุนู
        setTimeout(() => {
          navigate('/dashboard');
        }, 1000); // ุชุฃุฎูุฑ ูุตูุฑ ูุฅุธูุงุฑ ุฑุณุงูุฉ ุงููุฌุงุญ
      } else {
        toast.error(`ูุดู ุงูุชุณุฌูู: ${error?.message || 'ุญุฏุซ ุฎุทุฃ'}`);
      }
    } catch (error) {
      toast.error('ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงูุชุณุฌูู');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <Card className="w-full max-w-lg mx-auto">
      <CardHeader>
        <CardTitle className="text-2xl text-center">ุฅูุดุงุก ุญุณุงุจ ูุณุคูู ููุทุงู ูุฑุนู</CardTitle>
        <CardDescription className="text-center">
          ูู ุจุฅุฏุฎุงู ุจูุงูุงุชู ูุฅูุดุงุก ุญุณุงุจ ูุณุคูู ุฌุฏูุฏ ููุทุงู ูุฑุนู ุฎุงุต ุจู
        </CardDescription>
      </CardHeader>
      <CardContent>
        <Form {...form}>
          <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-4">
            <div className="space-y-4">
              <h3 className="text-lg font-medium">ูุนูููุงุช ุงููุณุคูู</h3>
              
              <FormField
                control={form.control}
                name="name"
                render={({ field }) => (
                  <FormItem>
                    <FormLabel>ุงูุงุณู ุงููุงูู</FormLabel>
                    <FormControl>
                      <Input {...field} placeholder="ุฃุฏุฎู ุงุณูู ุงููุงูู" className="text-right" dir="rtl" />
                    </FormControl>
                    <FormMessage />
                  </FormItem>
                )}
              />
              
              <FormField
                control={form.control}
                name="email"
                render={({ field }) => (
                  <FormItem>
                    <FormLabel>ุงูุจุฑูุฏ ุงูุฅููุชุฑููู</FormLabel>
                    <FormControl>
                      <Input {...field} type="email" placeholder="ุฃุฏุฎู ุจุฑูุฏู ุงูุฅููุชุฑููู" className="text-right" dir="rtl" />
                    </FormControl>
                    <FormMessage />
                  </FormItem>
                )}
              />
              
              <FormField
                control={form.control}
                name="phone"
                render={({ field }) => (
                  <FormItem>
                    <FormLabel>ุฑูู ุงููุงุชู (ุงุฎุชูุงุฑู)</FormLabel>
                    <FormControl>
                      <Input {...field} type="tel" placeholder="ุฃุฏุฎู ุฑูู ูุงุชูู" className="text-right" dir="rtl" />
                    </FormControl>
                    <FormMessage />
                  </FormItem>
                )}
              />
              
              <FormField
                control={form.control}
                name="password"
                render={({ field }) => (
                  <FormItem>
                    <FormLabel>ูููุฉ ุงููุฑูุฑ</FormLabel>
                    <FormControl>
                      <Input {...field} type="password" placeholder="ุฃุฏุฎู ูููุฉ ุงููุฑูุฑ" className="text-right" dir="rtl" />
                    </FormControl>
                    <FormMessage />
                  </FormItem>
                )}
              />
              
              <FormField
                control={form.control}
                name="confirmPassword"
                render={({ field }) => (
                  <FormItem>
                    <FormLabel>ุชุฃููุฏ ูููุฉ ุงููุฑูุฑ</FormLabel>
                    <FormControl>
                      <Input {...field} type="password" placeholder="ุฃุนุฏ ุฅุฏุฎุงู ูููุฉ ุงููุฑูุฑ" className="text-right" dir="rtl" />
                    </FormControl>
                    <FormMessage />
                  </FormItem>
                )}
              />
            </div>
            
            <div className="space-y-4 pt-4 border-t">
              <h3 className="text-lg font-medium">ูุนูููุงุช ุงููุคุณุณุฉ ูุงููุทุงู</h3>
              
              <FormField
                control={form.control}
                name="organizationName"
                render={({ field }) => (
                  <FormItem>
                    <FormLabel>ุงุณู ุงููุคุณุณุฉ</FormLabel>
                    <FormControl>
                      <Input {...field} placeholder="ุฃุฏุฎู ุงุณู ุงููุคุณุณุฉ" className="text-right" dir="rtl" />
                    </FormControl>
                    <FormMessage />
                  </FormItem>
                )}
              />
              
              <FormField
                control={form.control}
                name="subdomain"
                render={({ field }) => (
                  <FormItem>
                    <FormLabel>ุงููุทุงู ุงููุฑุนู</FormLabel>
                    <FormControl>
                      <div className="flex items-center">
                        <Input {...field} placeholder="mystore" className="rounded-r-none border-l-0" />
                        <div className="bg-muted px-3 h-10 flex items-center border border-input border-l-0 rounded-l-md">
                          .yourdomain.com
                        </div>
                      </div>
                    </FormControl>
                    <FormDescription>
                      ุณูููู ูุฐุง ุนููุงู ุงููููุน ุงูุฎุงุต ุจู ูููุตูู ุฅูู ุงููุธุงู.
                    </FormDescription>
                    <FormMessage />
                  </FormItem>
                )}
              />
            </div>
            
            <Button type="submit" className="w-full mt-6" disabled={isLoading}>
              {isLoading ? 'ุฌุงุฑู ุฅูุดุงุก ุงูุญุณุงุจ...' : 'ุฅูุดุงุก ุญุณุงุจ ุงููุณุคูู ูุงููุทุงู'}
            </Button>
          </form>
        </Form>
      </CardContent>
      <CardFooter className="flex flex-col space-y-2">
        <div className="text-center text-sm text-muted-foreground">
          ูุฏูู ุญุณุงุจ ุจุงููุนูุ{' '}
          <a href="/login" className="underline underline-offset-4 text-primary">
            ุชุณุฌูู ุงูุฏุฎูู
          </a>
        </div>
      </CardFooter>
    </Card>
  );
};

export default TenantRegistrationForm;
