/**
 * Performance Optimizer - ╪к╪н╪│┘К┘Ж╪з╪к ╪з┘Д╪г╪п╪з╪б ┘И╪к┘В┘Д┘К┘Д forced reflow
 */

// ╪п╪з┘Д╪й ┘Д╪к╪м┘Ж╪и forced reflow ╪╣┘Ж╪п ┘В╪▒╪з╪б╪й DOM properties
export const readDOMWithoutReflow = (callback: () => void) => {
  // ╪м╪п┘И┘Д╪й ╪з┘Д┘В╪▒╪з╪б╪й ┘Б┘К ╪и╪п╪з┘К╪й frame ╪з┘Д╪к╪з┘Д┘К
  requestAnimationFrame(() => {
    requestAnimationFrame(callback);
  });
};

// ╪п╪з┘Д╪й ┘Е╪н╪│┘Ж╪й ┘Д┘Д╪н╪╡┘И┘Д ╪╣┘Д┘Й dimensions ╪и╪п┘И┘Ж reflow
export const getDimensionsSafely = (element: HTMLElement) => {
  return new Promise<{ width: number; height: number; top: number; left: number }>((resolve) => {
    requestAnimationFrame(() => {
      if (!element) {
        resolve({ width: 0, height: 0, top: 0, left: 0 });
        return;
      }
      
      const rect = element.getBoundingClientRect();
      resolve({
        width: rect.width,
        height: rect.height,
        top: rect.top,
        left: rect.left
      });
    });
  });
};

// ЁЯЪА ┘Ж╪╕╪з┘Е ╪к╪н╪│┘К┘Ж DOM ┘Е╪н╪│┘Ж ┘Д┘Е┘Ж╪╣ Forced Reflow
class DOMOptimizer {
  private static instance: DOMOptimizer;
  private pendingReads: Array<() => void> = [];
  private pendingWrites: Array<() => void> = [];
  private isScheduled = false;
  private reflowCount = 0;
  private lastReportTime = 0;
  private LOG_THRESHOLD = 150; // ┘Д╪з ╪к┘П╪и┘Д╪║ ╪е┘Д╪з ╪е╪░╪з ╪к╪м╪з┘И╪▓╪к ┘З╪░╪з ╪з┘Д╪╣╪п╪п ╪о┘Д╪з┘Д 5 ╪л┘И╪з┘Ж┘Н

  static getInstance(): DOMOptimizer {
    if (!DOMOptimizer.instance) {
      DOMOptimizer.instance = new DOMOptimizer();
    }
    return DOMOptimizer.instance;
  }

  // ╪к╪м┘Е┘К╪╣ ┘В╪▒╪з╪б╪з╪к DOM
  scheduleRead(callback: () => void) {
    this.pendingReads.push(callback);
    this.scheduleFlush();
  }

  // ╪к╪м┘Е┘К╪╣ ┘Г╪к╪з╪и╪з╪к DOM
  scheduleWrite(callback: () => void) {
    this.pendingWrites.push(callback);
    this.scheduleFlush();
  }

  // ╪к┘Ж┘Б┘К╪░ ╪з┘Д╪╣┘Е┘Д┘К╪з╪к ╪з┘Д┘Е╪м┘Е╪╣╪й
  private scheduleFlush() {
    if (this.isScheduled) return;
    
    this.isScheduled = true;
    requestAnimationFrame(() => {
      // ╪к┘Ж┘Б┘К╪░ ╪м┘Е┘К╪╣ ╪з┘Д┘В╪▒╪з╪б╪з╪к ╪г┘И┘Д╪з┘Л
      while (this.pendingReads.length > 0) {
        const read = this.pendingReads.shift()!;
        try {
          read();
        } catch (error) {
          console.warn('╪о╪╖╪г ┘Б┘К ┘В╪▒╪з╪б╪й DOM:', error);
        }
      }
      
      // ╪л┘Е ╪к┘Ж┘Б┘К╪░ ╪м┘Е┘К╪╣ ╪з┘Д┘Г╪к╪з╪и╪з╪к
      while (this.pendingWrites.length > 0) {
        const write = this.pendingWrites.shift()!;
        try {
          write();
        } catch (error) {
          console.warn('╪о╪╖╪г ┘Б┘К ┘Г╪к╪з╪и╪й DOM:', error);
        }
      }
      
      this.isScheduled = false;
    });
  }

  // ╪к╪к╪и╪╣ ╪╣╪п╪п ╪╣┘Е┘Д┘К╪з╪к reflow
  trackReflow() {
    this.reflowCount++;
    const now = Date.now();

    // ╪к┘В╪▒┘К╪▒ ┘Г┘Д 5 ╪л┘И╪з┘Ж┘Н ┘Е╪╣ ╪╣╪к╪и╪й ╪г╪╣┘Д┘Й╪М ┘И┘Д╪з ┘К┘П╪╖╪и╪╣ ╪е┘Д╪з ┘Б┘К ╪з┘Д╪к╪╖┘И┘К╪▒
    if (now - this.lastReportTime > 5000) {
      const shouldLog = typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'development';
      if (shouldLog && this.reflowCount > this.LOG_THRESHOLD) {
        console.warn(`тЪая╕П [PERFORMANCE] ╪к┘Е ╪з┘Г╪к╪┤╪з┘Б ${this.reflowCount} ╪╣┘Е┘Д┘К╪й forced reflow ┘Б┘К ╪в╪о╪▒ 5 ╪л┘И╪з┘Ж┘Н`);
      }
      this.reflowCount = 0;
      this.lastReportTime = now;
    }
  }

  // ╪з┘Д╪н╪╡┘И┘Д ╪╣┘Д┘Й ╪е╪н╪╡╪з╪ж┘К╪з╪к reflow
  getReflowStats() {
    return {
      reflowCount: this.reflowCount,
      pendingReads: this.pendingReads.length,
      pendingWrites: this.pendingWrites.length
    };
  }
}

// ╪к╪╡╪п┘К╪▒ instance ┘И╪з╪н╪п
export const domOptimizer = DOMOptimizer.getInstance();

// ╪п╪з┘Д╪й ┘Е╪н╪│┘Ж╪й ┘Д┘В┘К╪з╪│ ╪╣╪▒╪╢ ╪з┘Д╪╣┘Ж╪╡╪▒ ╪и╪п┘И┘Ж reflow
export const measureElementWidth = (element: HTMLElement): Promise<number> => {
  return new Promise((resolve) => {
    domOptimizer.scheduleRead(() => {
      if (!element) {
        resolve(0);
        return;
      }
      
      // ╪з╪│╪к╪о╪п╪з┘Е getBoundingClientRect ╪и╪п┘Д╪з┘Л ┘Е┘Ж clientWidth ┘Д╪к╪м┘Ж╪и reflow
      const rect = element.getBoundingClientRect();
      resolve(rect.width);
    });
  });
};

// ╪п╪з┘Д╪й ┘Е╪н╪│┘Ж╪й ┘Д┘В┘К╪з╪│ ╪з╪▒╪к┘Б╪з╪╣ ╪з┘Д╪╣┘Ж╪╡╪▒ ╪и╪п┘И┘Ж reflow
export const measureElementHeight = (element: HTMLElement): Promise<number> => {
  return new Promise((resolve) => {
    domOptimizer.scheduleRead(() => {
      if (!element) {
        resolve(0);
        return;
      }
      
      const rect = element.getBoundingClientRect();
      resolve(rect.height);
    });
  });
};

// ╪п╪з┘Д╪й ┘Е╪н╪│┘Ж╪й ┘Д┘Д╪н╪╡┘И┘Д ╪╣┘Д┘Й ┘Е┘И┘В╪╣ ╪з┘Д╪╣┘Ж╪╡╪▒ ╪и╪п┘И┘Ж reflow
export const getElementPosition = (element: HTMLElement): Promise<{ top: number; left: number }> => {
  return new Promise((resolve) => {
    domOptimizer.scheduleRead(() => {
      if (!element) {
        resolve({ top: 0, left: 0 });
        return;
      }
      
      const rect = element.getBoundingClientRect();
      resolve({
        top: rect.top + window.scrollY,
        left: rect.left + window.scrollX
      });
    });
  });
};

// ╪п╪з┘Д╪й ┘Е╪н╪│┘Ж╪й ┘Д╪к╪╖╪и┘К┘В ╪к╪║┘К┘К╪▒╪з╪к CSS ╪и╪п┘И┘Ж reflow
export const applyStylesWithoutReflow = (
  element: HTMLElement, 
  styles: Partial<CSSStyleDeclaration>
) => {
  domOptimizer.scheduleWrite(() => {
    Object.assign(element.style, styles);
  });
};

// ╪п╪з┘Д╪й ┘Е╪н╪│┘Ж╪й ┘Д╪е╪╢╪з┘Б╪й/╪е╪▓╪з┘Д╪й classes ╪и╪п┘И┘Ж reflow
export const toggleClassWithoutReflow = (
  element: HTMLElement, 
  className: string, 
  force?: boolean
) => {
  domOptimizer.scheduleWrite(() => {
    if (force === true) {
      element.classList.add(className);
    } else if (force === false) {
      element.classList.remove(className);
    } else {
      element.classList.toggle(className);
    }
  });
};

// ╪п╪з┘Д╪й ┘Е╪н╪│┘Ж╪й ┘Д╪к╪║┘К┘К╪▒ ╪з┘Д┘Ж╪╡ ╪и╪п┘И┘Ж reflow
export const setTextContentWithoutReflow = (
  element: HTMLElement, 
  text: string
) => {
  domOptimizer.scheduleWrite(() => {
    element.textContent = text;
  });
};

// ╪п╪з┘Д╪й ┘Е╪н╪│┘Ж╪й ┘Д╪к╪║┘К┘К╪▒ innerHTML ╪и╪п┘И┘Ж reflow
export const setInnerHTMLWithoutReflow = (
  element: HTMLElement, 
  html: string
) => {
  domOptimizer.scheduleWrite(() => {
    element.innerHTML = html;
  });
};

// ╪п╪з┘Д╪й ┘Е╪н╪│┘Ж╪й ┘Д╪е┘Ж╪┤╪з╪б ResizeObserver ╪и╪п┘И┘Ж reflow
export const createOptimizedResizeObserver = (
  element: HTMLElement,
  callback: (entries: ResizeObserverEntry[]) => void,
  options?: ResizeObserverOptions
) => {
  const observer = new ResizeObserver((entries) => {
    // ╪к╪г╪о┘К╪▒ ┘Е╪╣╪з┘Д╪м╪й ╪з┘Д╪к╪║┘К┘К╪▒╪з╪к ┘Д╪к╪м┘Ж╪и reflow ┘Е╪к┘Г╪▒╪▒
    requestAnimationFrame(() => {
      callback(entries);
    });
  });
  
  observer.observe(element, options);
  return observer;
};

// ╪п╪з┘Д╪й ┘Е╪н╪│┘Ж╪й ┘Д┘Е╪▒╪з┘В╪и╪й ╪к╪║┘К┘К╪▒╪з╪к DOM ╪и╪п┘И┘Ж reflow
export const createOptimizedMutationObserver = (
  element: HTMLElement,
  callback: (mutations: MutationRecord[]) => void,
  options?: MutationObserverInit
) => {
  const observer = new MutationObserver((mutations) => {
    // ╪к╪г╪о┘К╪▒ ┘Е╪╣╪з┘Д╪м╪й ╪з┘Д╪к╪║┘К┘К╪▒╪з╪к ┘Д╪к╪м┘Ж╪и reflow ┘Е╪к┘Г╪▒╪▒
    requestAnimationFrame(() => {
      callback(mutations);
    });
  });
  
  observer.observe(element, options);
  return observer;
};

// ╪п╪з┘Д╪й ┘Е╪н╪│┘Ж╪й ┘Д┘В┘К╪з╪│ ╪г╪п╪з╪б ╪з┘Д╪╣┘Е┘Д┘К╪з╪к
export const measurePerformance = <T>(fn: () => T): { result: T; duration: number } => {
  const start = performance.now();
  const result = fn();
  const duration = performance.now() - start;
  
  // ╪к╪н╪░┘К╪▒ ╪е╪░╪з ╪з╪│╪к╪║╪▒┘В╪к ╪з┘Д╪╣┘Е┘Д┘К╪й ╪г┘Г╪л╪▒ ┘Е┘Ж 16ms (frame ┘И╪з╪н╪п)
  if (duration > 16) {
    console.warn(`тЪая╕П [PERFORMANCE] ╪з┘Д╪╣┘Е┘Д┘К╪й ╪з╪│╪к╪║╪▒┘В╪к ${duration.toFixed(2)}ms (╪г┘Г╪л╪▒ ┘Е┘Ж frame ┘И╪з╪н╪п)`);
  }
  
  return { result, duration };
};

// ╪п╪з┘Д╪й ┘Е╪н╪│┘Ж╪й ┘Д┘В┘К╪з╪│ ╪г╪п╪з╪б ╪з┘Д╪╣┘Е┘Д┘К╪з╪к ╪║┘К╪▒ ╪з┘Д┘Е╪к╪▓╪з┘Е┘Ж╪й
export const measureAsyncPerformance = async <T>(fn: () => Promise<T>): Promise<{ result: T; duration: number }> => {
  const start = performance.now();
  const result = await fn();
  const duration = performance.now() - start;
  
  if (duration > 100) {
    console.warn(`тЪая╕П [PERFORMANCE] ╪з┘Д╪╣┘Е┘Д┘К╪й ╪║┘К╪▒ ╪з┘Д┘Е╪к╪▓╪з┘Е┘Ж╪й ╪з╪│╪к╪║╪▒┘В╪к ${duration.toFixed(2)}ms`);
  }
  
  return { result, duration };
};

// ╪к╪╡╪п┘К╪▒ ╪з┘Д╪п┘И╪з┘Д ╪з┘Д┘Е╪│╪з╪╣╪п╪й
export const scheduleRead = (callback: () => void) => domOptimizer.scheduleRead(callback);
export const scheduleWrite = (callback: () => void) => domOptimizer.scheduleWrite(callback);
export const getReflowStats = () => domOptimizer.getReflowStats();
