/**
 * ุชููุฆุฉ ูุธุงู ูุฑุงูุจุฉ ุงูุฃุฏุงุก ูุงูุชุญูููุงุช ุงูุดุงูู
 * ูุฑุจุท PerformanceTracker ูุน UltimateRequestController ููุญุตูู ุนูู ุฃูุตู ุงุณุชูุงุฏุฉ
 */

import { performanceTracker } from './PerformanceTracker';
import { ultimateRequestController } from '../ultimateRequestController';
import DuplicateRequestAnalyzer from './DuplicateRequestAnalyzer';
import PerformanceOptimizer from './performanceOptimizer';

export const initializePerformanceAnalytics = (): void => {
  // ุชููุฆุฉ ูุธุงู ุงููุฑุงูุจุฉ
  performanceTracker; // ุณูุชู ุชููุฆุชู ุชููุงุฆูุงู ุนูุฏ ุงูุงุณุชูุฑุงุฏ

  // ุฑุจุท ูุน UltimateRequestController ููุญุตูู ุนูู ูุนูููุงุช ุฅุถุงููุฉ
  if (typeof window !== 'undefined') {
    // ุฅุถุงูุฉ ุฏูุงู ูุณุงุนุฏุฉ ูููุทูุฑูู ูู ุงููููุณูู
    (window as any).performanceAnalytics = {
      getStats: () => performanceTracker.getRealtimeStats(),
      getRequests: (limit?: number) => performanceTracker.getDetailedRequests(limit),
      getPageHistory: () => performanceTracker.getPageHistory(),
      getRequestControllerStats: () => ultimateRequestController.getAnalytics(),
      analyzeDuplicates: (requests?: any[]) => {
        const requestData = requests || performanceTracker.getDetailedRequests(100);
        return DuplicateRequestAnalyzer.analyzeRequests(requestData);
      },
      generateReport: (requests?: any[]) => {
        const requestData = requests || performanceTracker.getDetailedRequests(100);
        const report = DuplicateRequestAnalyzer.generateReport(requestData);
        console.log(report);
        return report;
      },
      clearAll: () => {
        performanceTracker.clearData();
        ultimateRequestController.clearAllCaches();
      },
      analyzeSlowRequests: () => {
        const report = PerformanceOptimizer.getInstance().getSlowRequestsReport();
        console.log(report);
        return PerformanceOptimizer.getInstance().generateOptimizationReport();
      },
      optimizationSuggestions: () => {
        const suggestions = PerformanceOptimizer.getInstance().generateOptimizationReport();
        console.group('๐ ุงูุชุฑุงุญุงุช ุชุญุณูู ุงูุฃุฏุงุก');
        suggestions.forEach(suggestion => {
          console.log(`\n${suggestion.priority === 'high' ? '๐ด' : '๐ก'} ${suggestion.endpoint}`);
          console.log(`ุงููุดููุฉ: ${suggestion.issue}`);
          console.log(`ุงูุญู:`);
          console.log(suggestion.solution);
          console.log(`ุงูุชุญุณูู ุงููุชููุน: ${suggestion.expectedImprovement}`);
        });
        console.groupEnd();
        return suggestions;
      },
      exportAll: () => ({
        performance: performanceTracker.exportData(),
        requestController: ultimateRequestController.getAnalytics(),
        duplicateAnalysis: DuplicateRequestAnalyzer.analyzeRequests(performanceTracker.getDetailedRequests(100)),
        slowRequestsAnalysis: PerformanceOptimizer.getInstance().generateOptimizationReport(),
        timestamp: Date.now(),
      }),
    };

    // ุฅุถุงูุฉ keyboard shortcuts ูููุทูุฑูู
    document.addEventListener('keydown', (e) => {
      // Ctrl + Shift + P = ุฅุธูุงุฑ/ุฅุฎูุงุก Widget
      if (e.ctrlKey && e.shiftKey && e.key === 'P') {
        e.preventDefault();
        const event = new CustomEvent('togglePerformanceWidget');
        window.dispatchEvent(event);
      }

      // Ctrl + Shift + C = ูุณุญ ุฌููุน ุงูุจูุงูุงุช
      if (e.ctrlKey && e.shiftKey && e.key === 'C') {
        e.preventDefault();
        (window as any).performanceAnalytics.clearAll();
        console.log('๐งน ุชู ูุณุญ ุฌููุน ุจูุงูุงุช ุงููุฑุงูุจุฉ');
      }

      // Ctrl + Shift + E = ุชุตุฏูุฑ ุงูุจูุงูุงุช
      if (e.ctrlKey && e.shiftKey && e.key === 'E') {
        e.preventDefault();
        const data = (window as any).performanceAnalytics.exportAll();
        const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `complete-analytics-${new Date().toISOString().split('T')[0]}.json`;
        a.click();
        URL.revokeObjectURL(url);
        console.log('๐ ุชู ุชุตุฏูุฑ ุงูุชุญูููุงุช ุงููุงููุฉ');
      }
    });

    console.log(`
๐ ูุธุงู ูุฑุงูุจุฉ ุงูุฃุฏุงุก ุงูุดุงูู ูุงููุชุทูุฑ ุฌุงูุฒ!

๐ ุงูุฃูุงูุฑ ุงููุชุงุญุฉ ูู ุงููููุณูู:
  โข performanceAnalytics.getStats() - ุงูุฅุญุตุงุฆูุงุช ุงูุญุงููุฉ
  โข performanceAnalytics.getRequests() - ุขุฎุฑ ุงูุทูุจุงุช
  โข performanceAnalytics.analyzeDuplicates() - ุชุญููู ุงูุทูุจุงุช ุงูููุฑุฑุฉ
  โข performanceAnalytics.generateReport() - ุชูุฑูุฑ ููุตู ุจุงูุญููู
  โข performanceAnalytics.analyzeSlowRequests() - ุชุญููู ุงูุทูุจุงุช ุงูุจุทูุฆุฉ
  โข performanceAnalytics.optimizationSuggestions() - ุงูุชุฑุงุญุงุช ุชุญุณูู ููุตูุฉ
  โข performanceAnalytics.exportAll() - ุชุตุฏูุฑ ุฌููุน ุงูุจูุงูุงุช
  โข performanceAnalytics.clearAll() - ูุณุญ ุฌููุน ุงูุจูุงูุงุช

โจ๏ธ ุงุฎุชุตุงุฑุงุช ููุญุฉ ุงูููุงุชูุญ:
  โข Ctrl + Shift + P - ุฅุธูุงุฑ/ุฅุฎูุงุก Widget
  โข Ctrl + Shift + C - ูุณุญ ุฌููุน ุงูุจูุงูุงุช
  โข Ctrl + Shift + E - ุชุตุฏูุฑ ุงูุจูุงูุงุช

๐ ุชุญููู ุฐูู ูุชุทูุฑ:
  โข ููุดู ุงูุทูุจุงุช ุงูููุฏุฑุฉ ูุงูููุฑุฑุฉ
  โข ููุชุฑุญ ุญููู ูุญุฏุฏุฉ ููู endpoint
  โข ูุญุณุจ ุงูููุช ูุงูุจูุงูุงุช ุงููุญููุธุฉ
  โข ููุฐุฑ ููุฑุงู ููุทูุจุงุช ุงูุจุทูุฆุฉ ุงูุญุฑุฌุฉ (>1000ms)
  โข ูููุฑ ุงูุชุฑุงุญุงุช ุชุญุณูู ูุฎุตุตุฉ ููู ุทูุจ

โจ Widget ุงููุฑุงูุจุฉ ูุธูุฑ ูู ุฃุนูู ูููู ุงูุดุงุดุฉ ููููู ุณุญุจู ูุชุญุฑููู!
    `);
  }
};

export default initializePerformanceAnalytics; 